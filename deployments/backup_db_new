#!/bin/sh
# MySQL backup script
#  dumps the contents of a single database and compresses the sql file
#  every week and every month this copies the backup file so you will
#  always have a copy less than a day old, week old, and month old
#
# Created Dec 13 2007 by Trevor Allred www.trevorallred.com
# Usage: backup_db DATABASENAME
# Add this line to your crontab
# 0 2 * * * /usr/bin/backup_db DATABASENAME

backup_dir=/var/backups/
deploy_dir=${backup_dir}deployments/
cfg_file=${deploy_dir}config_tables.txt
cfg_tbls=
ign_tbls=

dbname="pics"

exec<$cfg_file
while read line
do
ign_tbls="${ign_tbls} --ignore_table ${dbname}.${line}"
cfg_tbls="${cfg_tbls} $line"
done

filename=${backup_dir}${dbname}_no_cfg_tbls.sql
wfilename=${backup_dir}${dbname}_no_cfg_tblsw.sql.gz
mfilename=${backup_dir}${dbname}_no_cfg_tblsm.sql.gz

filename2=${backup_dir}${dbname}_cfg_tbls.sql
wfilename2=${backup_dir}${dbname}_cfg_tblsw.sql.gz
mfilename2=${backup_dir}${dbname}_cfg_tblsm.sql.gz

#Backup pics db without config tables
/bin/cat /var/backups/restore_prepend > $filename
/usr/bin/mysqldump --opt $dbname $ign_tbls >> $filename
/bin/cat /var/backups/restore_append >> $filename
/bin/gzip -f $filename

#Backup pics db config tables only
/usr/bin/mysqldump --opt $dbname $cfg_tbls > $filename2
/bin/gzip -f $filename2


if [ `date +%a` = "Mon" ]; then
   cp $filename.gz $wfilename
   cp $filename2.gz $wfilename2
fi

if [ `date +%d` = "01" ]; then
   cp $filename.gz $mfilename
   cp $filename2.gz $mfilename2
fi

