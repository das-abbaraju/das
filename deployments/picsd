#!/bin/bash
#
# picsd      Startup script for the PICS Java/Tomcat Application
#

# Source function library.
. /etc/rc.d/init.d/functions

export JAVA_HOME=/usr/java/default
export M2_HOME=/usr/local/apache-maven
export M2=$M2_HOME/bin

export CATALINA_HOME=/usr/local/tomcat
export CATALINA_BASE=/var/tomcat/www

export CATALINA_OPTS="-Dpics.secure=1 -Dpics.ftpDir=/var/pics/www_files/ -Xincgc"
export JAVA_OPTS="-Xms100m -Xmx1000m -XX:MaxPermSize=256m"

export SVN_ROOT="http://svn.picsauditing.com/svn/repo"
export PICS_DIR="/var/pics/build/picsWeb2"

prog=picsd
pidfile=/var/run/picsd.pid
RETVAL=0

start() {
	echo $"Starting $prog:"
	export JAVA_OPTS="-Xms2000m -Xmx2500m -XX:MaxPermSize=512m"
	rm -f $CATALINA_BASE/logs/*
	$CATALINA_HOME/bin/catalina.sh start
	RETVAL=$?
	ps -ef | grep tomcat | grep www | cut -c 10-14 > /var/run/picsd.pid
	return $RETVAL
}

stop()
{
    echo $"Shutting down $prog:"
	$CATALINA_HOME/bin/catalina.sh stop
    waiting=0
    while [ $waiting -lt 10 ]
    do
	sleep 1
    	pid=`ps -ef | grep tomcat | grep www | cut -c 10-14`
	if [ -z $pid ];
		then
			break
	fi
	waiting=$(( $waiting + 1 ))
    done 
    if [ -z $pid ]; 
	then 
		echo "Tomcat has been shutdown gracefully"
	else
		echo "Tomcat did not shutdown gracefully... Killing $pid"
		killproc -p $pidfile -d 100 -signal KILL 
    fi
    RETVAL=$?
    echo
    rm -f $pidfile
    return $RETVAL
}

build()
{
	export JAVA_OPTS="-Xms100m -Xmx500m -XX:MaxPermSize=256m"
	cd /var/pics/build/picsWeb2
	/usr/bin/svn up
	$M2/mvn clean
	$M2/mvn package -Dmaven.test.skip=true
}

notify()
{
	echo "Replacing keepalive.jsp"
    echo "SHUTTING DOWN" > $CATALINA_BASE/webapps/ROOT/keepalive.jsp
    sleep 15
}

reload()
{
	rm -rf $CATALINA_BASE/webapps/ROOT*
	rm -rf $CATALINA_BASE/work/Catalina/*
	cp /var/pics/build/picsWeb2/target/ROOT $CATALINA_BASE/webapps/ -fR
	cp /var/pics/build/picsWeb2/resources/ehcache-`hostname -s`.xml $CATALINA_BASE/webapps/ROOT/WEB-INF/classes/ehcache.xml -f
}

status()
{
	tail -f $CATALINA_BASE/logs/catalina.out
}

patch()
{
	cd /var/pics/build/picsWeb2
	$M2/mvn clean
	$M2/mvn package -Dmaven.test.skip=true
}

which()
{
	svn info /var/pics/build/picsWeb2 | grep URL
}

branch()
{
	svn switch $SVN_ROOT/Branch/pics/$1 $PICS_DIR
}

head()
{
	svn switch $SVN_ROOT/Trunk/picsWeb2 $PICS_DIR
}

diff()
{
	svn diff -r HEAD $PICS_DIR | grep ^+++
}

offline()
{
	sed -i 's/SYSTEM OK/SYSTEM NOT OK/g' $CATALINA_BASE/webapps/ROOT/keepalive.jsp
}

online()
{
	sed -i 's/SYSTEM NOT OK/SYSTEM OK/g' $CATALINA_BASE/webapps/ROOT/keepalive.jsp
}

# See how we were called.
case "$1" in
	build)
		build
        ;;
	start)
		start
		status
        ;;
	stop)
		stop
        ;;
	status)
		status
	;;
	restart)
		stop
		start
		status
        ;;
	reload)
		notify
		stop
		reload
		start
		status
        ;;
	patch)
		patch
	;;
	which)
		which
	;;
	branch)
		branch $2
	;;
	head)
		head
	;;
	diff)
		diff
	;;
	offline)
		offline
	;;
	online)
		online
	;;
	*)
        echo $"Usage: $prog {start|stop|restart|reload|status|build|patch|which|branch|head|diff|offline|online}"
        exit 1
esac

exit $RETVAL
