<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true">

	<property name="destination" value="${catalina.base}/logs/PICSORG" />

	<!-- Appenders -->

	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${destination}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily -->
			<fileNamePattern>${destination}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!-- Keep logs for 7 days -->
			<maxHistory>7</maxHistory>

			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 100MB -->
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="ReportUsageAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${destination}_report_usage.log</file>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss},%msg%n</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${destination}_report_usage.%d{yyyy-MM-dd}.log</FileNamePattern>
		</rollingPolicy>
		<maxHistory>10</maxHistory>
		<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
			<maxFileSize>100MB</maxFileSize>
		</timeBasedFileNamingAndTriggeringPolicy>
	</appender>

	<!-- Perf4J appenders -->

	<appender name="graphExecutionTimes" class="org.perf4j.logback.GraphingStatisticsAppender">
		<!-- Possible GraphTypes are Mean, Min, Max, StdDev, Count and TPS -->
		<param name="GraphType" value="Mean"/>
		<!-- The tags of the timed execution blocks to graph are specified here -->
		<param name="TagNamesToGraph" value="PicsLogger, ReportNewRequestedContractor" />
	</appender>

	<appender name="graphExecutionTPS" class="org.perf4j.logback.GraphingStatisticsAppender">
		<param name="GraphType" value="TPS" />
		<param name="TagNamesToGraph" value="PicsLogger, ReportNewRequestedContractor" />
	</appender>

	<!--
		This AsyncCoalescingStatisticsAppender groups StopWatch log messages
		into GroupedTimingStatistics messages which it sends on the
		file appender defined below
	-->
	<appender name="CoalescingStatistics" class="org.perf4j.logback.AsyncCoalescingStatisticsAppender">
		<param name="TimeSlice" value="10000"/>
		<appender-ref ref="graphExecutionTimes"/>
		<appender-ref ref="graphExecutionTPS"/>
	</appender>

	<!-- This file appender is used to output aggregated performance statistics -->
	<appender name="perf4jFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${destination}_perf4j.log</file>
		<encoder>
			<Pattern>%date %-5level [%thread] %msg%n</Pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${destination}_perf4j.%d{yyyy-MM-dd}.log</FileNamePattern>
		</rollingPolicy>
	</appender>

	<!-- Loggers -->
	<!--
		NOTE: If you add a new logger, make sure you can set the log level through the Java system properties
		and also send Jared Griffith an email so he knows about it.
	-->

	<!-- INFO by default, unless you specify -Dloglevel=SOMETHINGELSE -->
	<root level="${loglevel:-warn}">
	  <appender-ref ref="FILE" />
	</root>

	<logger name="com.picsauditing.interceptors.ReportUsageInterceptor" level="${loglevel_report:-info}">
		<appender-ref ref="ReportUsageAppender"/>
	</logger>

	<logger name="org.perf4j.TimingLogger" additivity="false" level="${loglevel_timing:-info}">
		<appender-ref ref="CoalescingStatistics"/>
		<appender-ref ref="perf4jFileAppender"/>
	</logger>
	
	<logger name="org.perf4j.DebugTimingLogger" additivity="false" level="${loglevel_timing:-debug}">
		<appender-ref ref="perf4jFileAppender"/>
	</logger>

	<logger name="org.hibernate.engine.StatefulPersistenceContext.ProxyWarnLog"> 
		<level value="error" /> 
	</logger> 

</configuration>
