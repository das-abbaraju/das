package com.picsauditing.jpa.entities;
// Generated Nov 15, 2007 2:20:12 PM by Hibernate Tools 3.2.0.b11


import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Where;



/**
 * ContractorInfoReport generated by hbm2java
 */
@Entity
@NamedQueries({
	@NamedQuery(name="contractorsByName", query="select cr from ContractorInfoReport cr where cr.account.name like :name"),
	@NamedQuery(name="contractorsByAuditor", query="select cr from ContractorInfoReport cr where cr.pqfAuditorId=:pqfAuditorId"),
	@NamedQuery(name="getActiveContractors", query="select cr from ContractorInfoReport cr where cr.account.active='Y'")
	
})

@Table(name="contractor_info"
)
public class ContractorInfoReport  implements java.io.Serializable {


     private int id;
     private AccountReport account;
     private int pqfAuditorId;
     private List<GeneralContractor> generalContractors = new ArrayList<GeneralContractor>(0);
     private Collection<OshaLogReport> oshaLogs = new ArrayList<OshaLogReport>(0);
     private List<PqfLogReport> emrLogs = new ArrayList<PqfLogReport>(0);

    public ContractorInfoReport() {
    }

	
    public ContractorInfoReport(int id, AccountReport account, int pqfAuditorId) {
        this.id = id;
        this.account = account;
        this.pqfAuditorId = pqfAuditorId;
    }
    public ContractorInfoReport(int id, AccountReport account, int pqfAuditorId, List<GeneralContractor> generalContractors, Collection<OshaLogReport> oshaLogs, List<PqfLogReport> emrLogs) {
       this.id = id;
       this.account = account;
       this.pqfAuditorId = pqfAuditorId;
       this.generalContractors = generalContractors;
       this.oshaLogs = oshaLogs;
       this.emrLogs = emrLogs;
    }
   
     @Id 
    
    @Column(name="id", nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id", nullable=false, insertable=false, updatable=false)
    public AccountReport getAccount() {
        return this.account;
    }

public void setAccount(AccountReport account) {
    this.account = account;
}

@OneToMany(fetch=FetchType.LAZY, mappedBy="contractorInfo")
    public Collection<OshaLogReport> getOshaLogs() {
        return this.oshaLogs;
    }
    
    public void setOshaLogs(Collection<OshaLogReport> oshaLogs) {
        this.oshaLogs = oshaLogs;
    }
//@OneToMany(fetch=FetchType.LAZY, mappedBy="contractorInfoReport")
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinColumn(name="conID")
     //@Where(clause="questionID=126 or questionID=889 or questionID=1519")
    @Where(clause="questionID in (889,1519,1617)")
    public List<PqfLogReport> getEmrLogs() {
        return this.emrLogs;
    }
    
    public void setEmrLogs(List<PqfLogReport> emrLogs) {
        this.emrLogs = emrLogs;
    }
    
    @Column(name="pqfAuditor_id", nullable=false)
    public int getPqfAuditorId() {
        return this.pqfAuditorId;
    }
    
    public void setPqfAuditorId(int pqfAuditorId) {
        this.pqfAuditorId = pqfAuditorId;
    }
    
    @OneToMany(fetch=FetchType.LAZY, mappedBy="contractorInfo")
    public List<GeneralContractor> getGeneralContractors() {
        return this.generalContractors;
    }
    
    public void setGeneralContractors(List<GeneralContractor> generalContractors) {
        this.generalContractors = generalContractors;
    }

    


}


