<beans:beans xmlns="http://www.springframework.org/schema/rabbit"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd"
	default-autowire="byName">

	<!--  the connection settings for this are in /resources/amqp_connection.properties -->
	<connection-factory id="ifJndiFailsConnectionFactory" host="${rabbit.host}" port="${rabbit.port}" username="${rabbit.username}" password="${rabbit.password}"/>
	
	<beans:bean id="connectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<beans:property name="jndiName" value="java:comp/env/amqp/pics" />   
    	<beans:property name="resourceRef" value="false" />
    	<beans:property name="defaultObject" ref="ifJndiFailsConnectionFactory"/>
 	</beans:bean>
	
	<admin id="amqpAdmin" connection-factory="connectionFactory"/>

    <!-- BEGIN EG Rabbit Config -->
    <rabbit:queue id="employeeguard-queue" name="employeeguard-queue" />
    <rabbit:direct-exchange name="employeeguard-exchange" xmlns="http://www.springframework.org/schema/rabbit">
        <rabbit:bindings>
            <rabbit:binding queue="employeeguard-queue" key="employeeguard-queue" />
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <rabbit:template
            id="employeeGuardTemplate"
            message-converter="messageConverter"
            connection-factory="connectionFactory"
            exchange="employeeguard-exchange"
            queue="employeeguard-queue"
            />
    <beans:bean id="EmployeeGuardPublisher" class="com.picsauditing.messaging.EmployeeGuardPublisher" scope="prototype">
        <beans:property name="amqpTemplate" ref="employeeGuardTemplate" />
    </beans:bean>

    <beans:bean id="employeeGuardListener" class="com.picsauditing.employeeguard.messaging.EmployeeGuardListener" />

    <rabbit:listener-container id="employeeGuardListenerContainer" connection-factory="connectionFactory" concurrency="1">
        <rabbit:listener queues="employeeguard-queue" ref="employeeGuardListener" method="onMessage" />
    </rabbit:listener-container>

    <beans:bean id="employeeGuardHandler" class="com.picsauditing.employeeguard.messaging.EmployeeGuardHandler" autowire="byName" />

    <!-- END EG Rabbit Config -->

    <queue id="flag-changes-dead" name="flag-changes-dead"/>

    <direct-exchange name="flag-changes-dead-letter-exchange" xmlns="http://www.springframework.org/schema/rabbit">
        <bindings>
            <binding queue="flag-changes-dead" key="flag-changes-dead"/>
        </bindings>
    </direct-exchange>

    <queue id="flag-changes" name="flag-changes" >
        <queue-arguments>
            <beans:entry key="x-dead-letter-exchange" value="flag-changes-dead-letter-exchange" />
            <beans:entry key="x-dead-letter-routing-key" value="flag-changes-dead" />
        </queue-arguments>
    </queue>

    <fanout-exchange name="flag-changes-exchange" xmlns="http://www.springframework.org/schema/rabbit">
        <bindings>
            <binding queue="flag-changes"/>
        </bindings>
    </fanout-exchange>

	<queue id="csr-assignments" name="csr-assignments" />
    <direct-exchange name="csr-assignments-exchange" xmlns="http://www.springframework.org/schema/rabbit">
        <bindings>
            <binding queue="csr-assignments"/>
        </bindings>
    </direct-exchange>

    <queue id="csr-assignments-single-dead" name="csr-assignments-single-dead" />

    <direct-exchange name="csr-assignments-single-dead-letter-exchange" xmlns="http://www.springframework.org/schema/rabbit">
        <bindings>
            <binding queue="csr-assignments-single-dead" key="csr-assignments-single-dead"/>
        </bindings>
    </direct-exchange>

    <queue id="csr-assignments-single" name="csr-assignments-single" >
        <queue-arguments>
            <beans:entry key="x-dead-letter-exchange" value="csr-assignments-single-dead-letter-exchange" />
            <beans:entry key="x-dead-letter-routing-key" value="csr-assignments-single-dead" />
        </queue-arguments>
    </queue>

    <direct-exchange name="csr-assignments-single-exchange" xmlns="http://www.springframework.org/schema/rabbit">
        <bindings>
            <binding queue="csr-assignments-single" />
        </bindings>
    </direct-exchange>

	<queue id="email-requests" name="email-requests" />
	<direct-exchange name="email-requests-exchange" xmlns="http://www.springframework.org/schema/rabbit">
	  <bindings>
	    <binding queue="email-requests"/>
	  </bindings>
	</direct-exchange>
	
	<template message-converter="messageConverter" id="FlagChangeTemplate" connection-factory="connectionFactory" exchange="flag-changes-exchange" queue="flag-changes"/>
	<beans:bean id="FlagChangePublisher" class="com.picsauditing.messaging.FlagChangePublisher" scope="prototype">
		<beans:property name="amqpTemplate" ref="FlagChangeTemplate" />
		<beans:property name="featureToggleChecker" ref="FeatureToggle" />
		<beans:property name="featureToggleName" value="Toggle.BackgroundProcesses.FlagChanges" />
	</beans:bean>

    <template message-converter="messageConverter" id="CsrAssignmentSingleTemplate" connection-factory="connectionFactory" exchange="csr-assignments-single-exchange" queue="csr-assignments-single"/>

    <beans:bean id="CsrAssignmentSinglePublisher" class="com.picsauditing.messaging.CsrAssignmentSinglePublisher" scope="prototype">
        <beans:property name="amqpTemplate" ref="CsrAssignmentSingleTemplate" />
    </beans:bean>

	<template message-converter="messageConverter" id="EmailRequestTemplate" connection-factory="connectionFactory" exchange="email-requests-exchange" queue="email-requests"/>
	<beans:bean id="EmailRequestPublisher" class="com.picsauditing.messaging.EmailRequestPublisher" scope="prototype">
		<beans:property name="amqpTemplate" ref="EmailRequestTemplate" />
	</beans:bean>

	<beans:bean id="defaultJavaTypeMapper" class="org.springframework.amqp.support.converter.DefaultJavaTypeMapper">
<!-- 		<beans:property name="idClassMapping"> -->
<!-- 			<beans:map> -->
<!-- 				<beans:entry key="com.picsauditing.jpa.entities.EmailQueue" value="com.picsauditing.mail.Email" /> -->
<!-- 			</beans:map> -->
<!-- 		</beans:property> -->
	</beans:bean>
	
	<beans:bean id="messageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter">
		<beans:property name="javaTypeMapper" ref="defaultJavaTypeMapper"/>
	</beans:bean>

</beans:beans>
